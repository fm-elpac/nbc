//! 数据类型

/// 对代码中所有出现的数据类型的抽象 (引用)
#[derive(Debug, Clone)]
pub enum 数据类型 {
    /// 内置数据类型
    内置(数据类型内置),
    /// 源代码中定义
    定义(数据类型定义),
}

/// 歧语言 (编译器) 内置的数据类型
#[derive(Debug, Clone)]
pub enum 数据类型内置 {
    /// 空类型 `()`: 用于函数没有返回值
    空,
    /// `u1`
    U1,
    /// `u8`
    U8,
    /// `u16`
    U16,
    /// `u32`
    U32,
    /// `u64`
    U64,
    /// `u128`
    U128,
    /// `i8`
    I8,
    /// `i16`
    I16,
    /// `i32`
    I32,
    /// `i64`
    I64,
    /// `i128`
    I128,
    /// `f32`
    F32,
    /// `f64`
    F64,
    /// `整数`
    整数,
    /// `实数`
    实数,
    /// `数字`
    数字,
    /// `文本`
    文本,
    /// (泛型) `数组(T)`
    数组(Box<数据类型>),
    /// (泛型) `集合(T)`
    集合(Box<数据类型>),
    /// (泛型) `字典(K、V)`
    字典((Box<数据类型>, Box<数据类型>)),
    // `函数`: 属于 定义类型
}

/// 源代码中定义的数据类型
#[derive(Debug, Clone)]
pub struct 数据类型定义 {
    /// 定义所在的源文件的编号
    pub 模块编号: u64,
    /// 定义的名称 (编译器内部名称)
    pub 名称: String,
    /// 具体的数据类型
    pub 类型: 数据类型定义类型,
}

/// 源代码中定义的数据类型的分类
#[derive(Debug, Clone)]
pub enum 数据类型定义类型 {
    /// 结构体 (struct)
    结构体,
    /// 枚举 (enum)
    枚举,
    /// 函数 (签名)
    函数,
    /// 泛型
    泛型,
}
